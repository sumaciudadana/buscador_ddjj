package org.sumaciudadana.affidavit.entity;

// Generated 06/07/2012 11:12:13 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Affidavit generated by hbm2java
 */
@Entity
@Table(name = "affidavit", catalog = "sumaciudadana")
public class Affidavit {

	private Integer idaffidavit;
	private Position idposition;
	private Pservant pservant;
	private String affiPresentation;
	private Integer affiYear;
	private Long affiPublicIncome;
	private Long affiPrivateIncome;
	private Long affiTotalMonthWealth;
	private Long affiOtherPublicIncome;
	private Long affiOtherPrivateIncome;
	private Long affiTotalOtherIncome;
	private Long affiTotalBelong;
	private Long affiTotalWealth;
	private String affiType;
	private String affiSourceUrl;
	private Integer affiValid;
	private String userCreate;
	private Date dateCreate;
	private String userModify;
	private Date dateModify;
	private List<Belonging> belongings = new ArrayList<Belonging>();
	private List<Belonging> belongingsNormal = new ArrayList<Belonging>();
	private List<Belonging> belongingsOther = new ArrayList<Belonging>();
	private String title;

	// Statistics
	private String incomeIncrement;
	private String patrimonyIncrement;
	private double patIncAmount;
	private double salIncAmount;

	public Affidavit() {
	}

	public Affidavit(Position idposition, Pservant pservant) {
		this.idposition = idposition;
		this.pservant = pservant;
	}

	public Affidavit(Position idposition, Pservant pservant,
			String affiPresentation, Integer affiYear, Long affiPublicIncome,
			Long affiPrivateIncome, Long affiTotalMonthWealth,
			Long affiOtherPublicIncome, Long affiOtherPrivateIncome,
			Long affiTotalOtherIncome, Long affiTotalBelong,
			Long affiTotalWealth, String affiType, String affiSourceUrl,
			Integer affiValid, String userCreate, Date dateCreate,
			String userModify, Date dateModify, List<Belonging> belongings) {
		this.idposition = idposition;
		this.pservant = pservant;
		this.affiPresentation = affiPresentation;
		this.affiYear = affiYear;
		this.affiPublicIncome = affiPublicIncome;
		this.affiPrivateIncome = affiPrivateIncome;
		this.affiTotalMonthWealth = affiTotalMonthWealth;
		this.affiOtherPublicIncome = affiOtherPublicIncome;
		this.affiOtherPrivateIncome = affiOtherPrivateIncome;
		this.affiTotalOtherIncome = affiTotalOtherIncome;
		this.affiType = affiType;
		this.affiSourceUrl = affiSourceUrl;
		this.affiValid = affiValid;
		this.userCreate = userCreate;
		this.dateCreate = dateCreate;
		this.userModify = userModify;
		this.dateModify = dateModify;
		this.belongings = belongings;
		this.affiTotalBelong = affiTotalBelong;
		this.affiTotalWealth = affiTotalWealth;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idaffidavit", unique = true, nullable = false)
	public Integer getIdaffidavit() {
		return this.idaffidavit;
	}

	public void setIdaffidavit(Integer idaffidavit) {
		this.idaffidavit = idaffidavit;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idposition", nullable = false)
	public Position getPosition() {
		return this.idposition;
	}

	public void setPosition(Position idposition) {
		this.idposition = idposition;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idpservant", nullable = false)
	public Pservant getPservant() {
		return this.pservant;
	}

	public void setPservant(Pservant pservant) {
		this.pservant = pservant;
	}

	@Column(name = "affi_presentation", length = 1)
	public String getAffiPresentation() {
		return this.affiPresentation;
	}

	public void setAffiPresentation(String affiPresentation) {
		this.affiPresentation = affiPresentation;
	}

	@Column(name = "affi_year")
	public Integer getAffiYear() {
		return this.affiYear;
	}

	public void setAffiYear(Integer affiYear) {
		this.affiYear = affiYear;
	}

	@Column(name = "affi_public_income", precision = 10, scale = 0)
	public Long getAffiPublicIncome() {
		if (this.affiPublicIncome != null) {
			return this.affiPublicIncome;
		} else {
			return (long) 0;
		}
	}

	public void setAffiPublicIncome(Long affiPublicIncome) {
		this.affiPublicIncome = affiPublicIncome;
	}

	@Column(name = "affi_private_income", precision = 10, scale = 0)
	public Long getAffiPrivateIncome() {
		if (this.affiPrivateIncome != null) {
			return this.affiPrivateIncome;
		} else {
			return (long) 0;
		}
	}

	public void setAffiPrivateIncome(Long affiPrivateIncome) {
		this.affiPrivateIncome = affiPrivateIncome;
	}

	@Column(name = "affi_total_month_wealth", precision = 10, scale = 0)
	public Long getAffiTotalMonthWealth() {
		if (this.affiTotalMonthWealth != null) {
			return this.affiTotalMonthWealth;
		} else {
			return (long) 0;
		}
	}

	public void setAffiTotalMonthWealth(Long affiTotalMonthWealth) {
		this.affiTotalMonthWealth = affiTotalMonthWealth;
	}

	@Column(name = "affi_other_public_income", precision = 10, scale = 0)
	public Long getAffiOtherPublicIncome() {
		if (this.affiOtherPublicIncome != null) {
			return this.affiOtherPublicIncome;
		} else {
			return (long) 0;
		}
	}

	public void setAffiOtherPublicIncome(Long affiOtherPublicIncome) {
		this.affiOtherPublicIncome = affiOtherPublicIncome;
	}

	@Column(name = "affi_other_private_income", precision = 10, scale = 0)
	public Long getAffiOtherPrivateIncome() {
		if (this.affiOtherPrivateIncome != null) {
			return this.affiOtherPrivateIncome;
		} else {
			return (long) 0;
		}
	}

	public void setAffiOtherPrivateIncome(Long affiOtherPrivateIncome) {
		this.affiOtherPrivateIncome = affiOtherPrivateIncome;
	}

	@Column(name = "affi_total_other_income", precision = 10, scale = 0)
	public Long getAffiTotalOtherIncome() {
		if (this.affiTotalOtherIncome != null) {
			return this.affiTotalOtherIncome;
		} else {
			return (long) 0;
		}
	}

	public void setAffiTotalOtherIncome(Long affiTotalOtherIncome) {
		this.affiTotalOtherIncome = affiTotalOtherIncome;
	}

	@Column(name = "affi_total_belong", precision = 10, scale = 0)
	public Long getAffiTotalBelong() {
		if (this.affiTotalBelong != null) {
			return affiTotalBelong;
		} else {
			return (long) 0;
		}
	}

	public void setAffiTotalBelong(Long affiTotalBelong) {
		this.affiTotalBelong = affiTotalBelong;
	}

	@Column(name = "affi_total_wealth", precision = 10, scale = 2)
	public Long getAffiTotalWealth() {
		if (this.affiTotalWealth != null) {
			return affiTotalWealth;
		} else {
			return (long) 0;
		}
	}

	public void setAffiTotalWealth(Long affiTotalWealth) {
		this.affiTotalWealth = affiTotalWealth;
	}

	@Column(name = "affi_type", length = 3)
	public String getAffiType() {
		return this.affiType;
	}

	public void setAffiType(String affiType) {
		this.affiType = affiType;
	}

	@Column(name = "affi_source_url", length = 200)
	public String getAffiSourceUrl() {
		return this.affiSourceUrl;
	}

	public void setAffiSourceUrl(String affiSourceUrl) {
		this.affiSourceUrl = affiSourceUrl;
	}

	@Column(name = "affi_valid")
	public Integer getAffiValid() {
		return affiValid;
	}

	public void setAffiValid(Integer affiValid) {
		this.affiValid = affiValid;
	}

	@Column(name = "user_create", length = 45)
	public String getUserCreate() {
		return this.userCreate;
	}

	public void setUserCreate(String userCreate) {
		this.userCreate = userCreate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_create", length = 19)
	public Date getDateCreate() {
		return this.dateCreate;
	}

	public void setDateCreate(Date dateCreate) {
		this.dateCreate = dateCreate;
	}

	@Column(name = "user_modify", length = 45)
	public String getUserModify() {
		return this.userModify;
	}

	public void setUserModify(String userModify) {
		this.userModify = userModify;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_modify", length = 19)
	public Date getDateModify() {
		return this.dateModify;
	}

	public void setDateModify(Date dateModify) {
		this.dateModify = dateModify;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "affidavit")
	public List<Belonging> getBelongings() {
		return this.belongings;
	}

	public void setBelongings(List<Belonging> belongings) {
		this.belongings = belongings;
	}

	// lists for search affidavit xhtml
	@Transient
	public List<Belonging> getBelongingsNormal() {
		// clear the list to avoid duplicated data
		belongingsNormal = new ArrayList<Belonging>();
		for (Belonging belonging : belongings) {
			if (belonging.getCategoryBelonging().equals("B")) {
				belongingsNormal.add(belonging);
			}
		}
		return belongingsNormal;
	}

	@Transient
	public List<Belonging> getBelongingsOther() {
		// clear the list to avoid duplicated data
		belongingsOther = new ArrayList<Belonging>();
		for (Belonging belonging : belongings) {
			if (belonging.getCategoryBelonging().equals("O")) {
				belongingsOther.add(belonging);
			}
		}
		return belongingsOther;
	}

	@Transient
	public String getTitle() {
		if (affiValid != null && affiValid == 1) {
			if (affiPresentation != null && affiPresentation.equals("I")) {
				return "Declaración jurada de inicio de la gestión";
			} else if (affiPresentation != null && affiPresentation.equals("C")) {
				return "Declaración jurada al final de la gestión";
			} else if (affiPresentation != null && affiPresentation.equals("P")) {
				return "Declaración jurada anual periódica";
			} else {
				return "No se indicó la oportunidad de presentación de esta declaración";
			}
		} else {
			return "No existe registro de esta declaración jurada";
		}
	}

	@Transient
	public String getIncomeIncrement() {
		return incomeIncrement;
	}

	public void setIncomeIncrement(String incomeIncrement) {
		this.incomeIncrement = incomeIncrement;
	}

	@Transient
	public String getPatrimonyIncrement() {
		return patrimonyIncrement;
	}

	public void setPatrimonyIncrement(String patrimonyIncrement) {
		this.patrimonyIncrement = patrimonyIncrement;
	}

	@Transient
	public double getPatIncAmount() {
		return patIncAmount;
	}

	public void setPatIncAmount(double patIncAmount) {
		this.patIncAmount = patIncAmount;
	}

	@Transient
	public double getSalIncAmount() {
		return salIncAmount;
	}

	public void setSalIncAmount(double salIncAmount) {
		this.salIncAmount = salIncAmount;
	}

	@Transient
	public String getPresentationName() {
		if (this.affiPresentation.equals("P")) {
			return "Periódica";
		} else if (this.affiPresentation.equals("I")) {
			return "Inicial";
		} else if (this.affiPresentation.equals("C")) {
			return "Cese";
		} else {
			if (affiValid.equals("1")) {
				return "No indica";
			} else {
				return "No presentó";
			}
		}
	}

}
